import*as e from"react";import{isFunction as a}from"../shared/utils.js";import{useComposeRefsCallback as l}from"../../hooks/useComposeRefsCallback.js";const o=new Set(["Escape","Enter"]),n=({onSubmit:n,onClear:s,externalRef:t})=>{const[r,u]=e.useState(""),c=e.useRef(null),f=l({externalRef:t,internalRef:c}),p=e.useCallback((()=>{var e;u(""),null===(e=null==c?void 0:c.current)||void 0===e||e.focus(),a(s)&&s()}),[u,s]),C=e.useCallback((e=>{a(n)&&n(e)}),[n]),i=e.useCallback((e=>{const{key:a}=e;o.has(a)&&(e.preventDefault(),"Escape"===a?p():"Enter"===a&&C(r))}),[r,p,C]),k=e.useCallback((e=>{u(e.target.value)}),[u]),m=e.useCallback((()=>{C(r)}),[C,r]);return{value:r,onClearHandler:p,onKeyDown:i,onInput:k,onClick:m,composedRefs:f}};export{n as useSearchField};
