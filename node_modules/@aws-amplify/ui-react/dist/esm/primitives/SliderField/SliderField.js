import{__rest as e}from"../../node_modules/tslib/tslib.es6.js";import{jsxs as r,jsx as i}from"react/jsx-runtime";import a from"classnames";import{Root as l,Track as t,Range as s,Thumb as o}from"@radix-ui/react-slider";import*as d from"react";import{ComponentClassNames as n}from"../shared/constants.js";import"../Field/FieldClearButton.js";import{FieldDescription as m}from"../Field/FieldDescription.js";import{FieldErrorMessage as c}from"../Field/FieldErrorMessage.js";import{FieldGroup as u}from"../FieldGroup/FieldGroup.js";import{Flex as p}from"../Flex/Flex.js";import{isFunction as b}from"../shared/utils.js";import{Label as f}from"../Label/Label.js";import{splitPrimitiveProps as h}from"../shared/styleUtils.js";import{View as g}from"../View/View.js";import{useStableId as C}from"../utils/useStableId.js";const j="slider-label",F="slider-root",S="slider-track",v="slider-range",k=d.forwardRef(((j,F)=>{var{ariaValuetext:S,className:v,defaultValue:k,descriptiveText:x,emptyTrackColor:y,errorMessage:N,filledTrackColor:V,hasError:T=!1,id:E,isDisabled:O,isValueHidden:z=!1,label:H,labelHidden:I=!1,onChange:w,orientation:M="horizontal",outerEndComponent:D,outerStartComponent:G,testId:L,thumbColor:R,trackSize:P,dir:B,value:U,size:_}=j,q=e(j,["ariaValuetext","className","defaultValue","descriptiveText","emptyTrackColor","errorMessage","filledTrackColor","hasError","id","isDisabled","isValueHidden","label","labelHidden","onChange","orientation","outerEndComponent","outerStartComponent","testId","thumbColor","trackSize","dir","value","size"]);const A=C(E),J=C(),K=C(),Q=x?K:void 0,{flexContainerStyleProps:W,baseStyleProps:X,rest:Y}=h(q),Z=void 0!==U,[$,ee]=d.useState(Z?U:k),re=Z?[U]:void 0,ie=Z?void 0:[k],ae=d.useCallback((e=>{ee(e[0]),b(w)&&w(e[0])}),[w]),le="vertical"===M;return r(p,Object.assign({className:a(n.Field,n.SliderField),testId:L,"data-size":_},X,W,{children:[r(f,Object.assign({className:n.SliderFieldLabel,id:J,testId:"slider-label",visuallyHidden:I},{children:[i(g,Object.assign({as:"span"},{children:H})),z?null:i(g,Object.assign({as:"span"},{children:$}))]})),i(m,{id:K,labelHidden:I,descriptiveText:x}),i(u,Object.assign({className:n.SliderFieldGroup,id:A,orientation:M,outerStartComponent:G,outerEndComponent:D},{children:r(l,Object.assign({className:a(n.SliderFieldRoot,v),"data-testid":"slider-root",disabled:O,defaultValue:ie,onValueChange:ae,orientation:M,ref:F,value:re},Y,{children:[i(t,Object.assign({className:n.SliderFieldTrack,"data-testid":"slider-track",style:{backgroundColor:y,[""+(le?"width":"height")]:P}},{children:i(s,{className:n.SliderFieldRange,"data-testid":"slider-range",style:{backgroundColor:V}})})),i(o,{"aria-describedby":Q,"aria-labelledby":J,"aria-valuetext":S,className:n.SliderFieldThumb,style:{backgroundColor:R}})]}))})),i(c,{hasError:T,errorMessage:N})]}))}));k.displayName="SliderField";export{j as SLIDER_LABEL_TEST_ID,v as SLIDER_RANGE_TEST_ID,F as SLIDER_ROOT_TEST_ID,S as SLIDER_TRACK_TEST_ID,k as SliderField};
