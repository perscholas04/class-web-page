/// <reference types="react" />
import { FlexProps } from './flex';
import { GridProps } from './grid';
import { BaseStyleProps } from './style';
export declare type CollectionType = 'list' | 'grid' | 'table';
export interface CollectionWrapperProps extends BaseStyleProps {
    /**
     * Collection type. This will be used to determine collection wrapper component.
     * @default 'list'
     */
    type?: CollectionType;
    /**
     * Enable pagination for collection items
     */
    isPaginated?: boolean;
    /**
     * Page size (when pagination is enabled)
     */
    itemsPerPage?: number;
    /**
     * Enable collection filtering
     */
    isSearchable?: boolean;
    /**
     * Custom search filter (when search is enabled)
     */
    searchFilter?: (item: unknown, searchText: string) => boolean;
    /**
     * Search field placeholder
     */
    searchPlaceholder?: string;
}
export interface CollectionBaseProps<Item> {
    items: Array<Item>;
    children: (item: Item, index: number) => JSX.Element;
}
export declare type ListCollectionProps<Item> = FlexProps & CollectionBaseProps<Item>;
export declare type GridCollectionProps<Item> = GridProps & CollectionBaseProps<Item>;
export declare type CollectionProps<Item> = CollectionWrapperProps & (({
    type: 'list';
} & ListCollectionProps<Item>) | ({
    type: 'grid';
} & GridCollectionProps<Item>));
