import{__awaiter as e,__generator as t,__rest as r,__assign as n}from"../../../node_modules/tslib/tslib.es6.js";import{Auth as i}from"aws-amplify";import s from"lodash/get";import o from"lodash/isEmpty";import{createMachine as a,sendUpdate as c}from"xstate";import{AuthChallengeNames as d}from"../../../types/authenticator/user.js";import"../../../types/authenticator/attributes.js";import{runValidators as u}from"../../../validators/index.js";import{clearAttributeToVerify as l,clearChallengeName as f,clearRequiredAttributes as g,clearError as m,clearFormValues as h,clearTouched as p,clearUnverifiedAttributes as v,clearValidationError as I,handleInput as E,handleSubmit as U,handleBlur as A,parsePhoneNumber as b,setChallengeName as y,setConfirmResetPasswordIntent as S,setConfirmSignUpIntent as T,setRequiredAttributes as C,setCredentials as N,setFieldErrors as w,setRemoteError as R,setUnverifiedAttributes as V,setUser as P,setUsernameAuthAttributes as _}from"../actions.js";import{defaultServices as F}from"../defaultServices.js";function k(k){var D=k.services;return a({initial:"init",id:"signInActor",states:{init:{always:[{target:"signIn"}]},signIn:{initial:"edit",exit:["clearFormValues","clearTouched"],states:{edit:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"submit"},CHANGE:{actions:"handleInput"},FEDERATED_SIGN_IN:"federatedSignIn"}},federatedSignIn:{tags:["pending"],entry:["sendUpdate","clearError"],invoke:{src:"federatedSignIn",onError:{actions:"setRemoteError"}}},submit:{tags:["pending"],entry:["parsePhoneNumber","clearError","sendUpdate"],invoke:{src:"signIn",onDone:[{cond:"shouldSetupTOTP",actions:["setUser","setChallengeName"],target:"#signInActor.setupTOTP"},{cond:"shouldConfirmSignIn",actions:["setUser","setChallengeName"],target:"#signInActor.confirmSignIn"},{cond:"shouldForceChangePassword",actions:["setUser","setChallengeName","setRequiredAttributes"],target:"#signInActor.forceNewPassword"},{actions:"setUser",target:"verifying"}],onError:[{cond:"shouldRedirectToConfirmSignUp",actions:["setCredentials","setConfirmSignUpIntent"],target:"rejected"},{cond:"shouldRedirectToConfirmResetPassword",actions:["setUsernameAuthAttributes","setConfirmResetPasswordIntent"],target:"rejected"},{actions:"setRemoteError",target:"edit"}]}},verifying:{tags:["pending"],entry:["clearError","sendUpdate"],invoke:{src:"checkVerifiedContact",onDone:[{cond:"shouldRequestVerification",target:"#signInActor.verifyUser",actions:"setUnverifiedAttributes"},{target:"resolved"}],onError:{actions:"setRemoteError",target:"edit"}}},resolved:{always:"#signInActor.resolved"},rejected:{always:"#signInActor.rejected"}}},confirmSignIn:{initial:"edit",exit:["clearFormValues","clearError","clearTouched"],states:{edit:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"submit"},SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput"}}},submit:{tags:["pending"],entry:["clearError","sendUpdate"],invoke:{src:"confirmSignIn",onDone:{target:"#signInActor.resolved",actions:["setUser","clearChallengeName","clearRequiredAttributes"]},onError:{target:"edit",actions:"setRemoteError"}}}}},forceNewPassword:{type:"parallel",exit:["clearFormValues","clearError","clearTouched"],states:{validation:{initial:"pending",states:{pending:{invoke:{src:"validateFields",onDone:{target:"valid",actions:"clearValidationError"},onError:{target:"invalid",actions:"setFieldErrors"}}},valid:{entry:"sendUpdate"},invalid:{entry:"sendUpdate"}},on:{SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput",target:".pending"},BLUR:{actions:"handleBlur",target:".pending"}}},submit:{initial:"idle",entry:"clearError",states:{idle:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"validate"}}},validate:{entry:"sendUpdate",invoke:{src:"validateFields",onDone:{target:"pending",actions:"clearValidationError"},onError:{target:"idle",actions:"setFieldErrors"}}},pending:{tags:["pending"],entry:["sendUpdate","clearError"],invoke:{src:"forceNewPassword",onDone:[{cond:"shouldConfirmSignIn",actions:["setUser","setChallengeName"],target:"#signInActor.confirmSignIn"},{cond:"shouldSetupTOTP",actions:["setUser","setChallengeName"],target:"#signInActor.setupTOTP"},{target:"resolved",actions:["setUser","setCredentials"]}],onError:{target:"idle",actions:"setRemoteError"}}},resolved:{type:"final",always:"#signInActor.resolved"}}}}},setupTOTP:{initial:"edit",exit:["clearFormValues","clearError","clearTouched"],states:{edit:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"submit"},SIGN_IN:"#signInActor.signIn",CHANGE:{actions:"handleInput"}}},submit:{tags:["pending"],entry:["sendUpdate","clearError"],invoke:{src:"verifyTotpToken",onDone:{actions:["setUser","clearChallengeName","clearRequiredAttributes"],target:"#signInActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},verifyUser:{initial:"edit",exit:["clearFormValues","clearError","clearTouched"],states:{edit:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"submit"},SKIP:"#signInActor.resolved",CHANGE:{actions:"handleInput"}}},submit:{tags:["pending"],entry:"clearError",invoke:{src:"verifyUser",onDone:{target:"#signInActor.confirmVerifyUser"},onError:{actions:"setRemoteError",target:"edit"}}}}},confirmVerifyUser:{initial:"edit",exit:["clearFormValues","clearError","clearUnverifiedAttributes","clearAttributeToVerify","clearTouched"],states:{edit:{entry:"sendUpdate",on:{SUBMIT:{actions:"handleSubmit",target:"submit"},SKIP:"#signInActor.resolved",CHANGE:{actions:"handleInput"}}},submit:{tags:["pending"],entry:"clearError",invoke:{src:"confirmVerifyUser",onDone:{target:"#signInActor.resolved"},onError:{actions:"setRemoteError",target:"edit"}}}}},resolved:{type:"final",data:function(e){return{user:e.user}}},rejected:{type:"final",data:function(e,t){return{intent:e.redirectIntent,authAttributes:e.authAttributes}}}}},{actions:{clearAttributeToVerify:l,clearChallengeName:f,clearRequiredAttributes:g,clearError:m,clearFormValues:h,clearTouched:p,clearUnverifiedAttributes:v,clearValidationError:I,handleInput:E,handleSubmit:U,handleBlur:A,parsePhoneNumber:b,setChallengeName:y,setConfirmResetPasswordIntent:S,setConfirmSignUpIntent:T,setRequiredAttributes:C,setCredentials:N,setFieldErrors:w,setRemoteError:R,setUnverifiedAttributes:V,setUser:P,setUsernameAuthAttributes:_,sendUpdate:c()},guards:{shouldConfirmSignIn:function(e,t){var r=s(t,"data.challengeName");return[d.SMS_MFA,d.SOFTWARE_TOKEN_MFA].includes(r)},shouldRedirectToConfirmSignUp:function(e,t){return"UserNotConfirmedException"===t.data.code},shouldRedirectToConfirmResetPassword:function(e,t){return"PasswordResetRequiredException"===t.data.code},shouldSetupTOTP:function(e,t){return s(t,"data.challengeName")===d.MFA_SETUP},shouldForceChangePassword:function(e,t){return s(t,"data.challengeName")===d.NEW_PASSWORD_REQUIRED},shouldRequestVerification:function(e,t){var r=t.data,n=r.unverified,i=r.verified;return o(i)&&!o(n)}},services:{signIn:function(r){return e(this,void 0,void 0,(function(){var e,n,i;return t(this,(function(t){switch(t.label){case 0:return e=r.formValues,n=e.username,i=e.password,[4,D.handleSignIn({username:n,password:i})];case 1:return[2,t.sent()]}}))}))},confirmSignIn:function(r,n){return e(this,void 0,void 0,(function(){var e,n,s,o;return t(this,(function(t){switch(t.label){case 0:return e=r.challengeName,n=r.user,s=r.formValues.confirmation_code,e!==d.SMS_MFA&&e!==d.SOFTWARE_TOKEN_MFA||(o=e),[4,D.handleConfirmSignIn({user:n,code:s,mfaType:o})];case 1:return t.sent(),[4,i.currentAuthenticatedUser()];case 2:return[2,t.sent()]}}))}))},forceNewPassword:function(s,o){return e(this,void 0,void 0,(function(){var e,o,a,c,d,u,l,f,g;return t(this,(function(t){switch(t.label){case 0:e=s.user,o=s.formValues,a=o.password,c=o.phone_number,d=o.country_code,u=r(o,["password","confirm_password","phone_number","country_code"]),c&&(l="".concat(d).concat(c).replace(/[^A-Z0-9+]/gi,""),u=n(n({},u),{phone_number:l})),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,i.completeNewPassword(e,a,u)];case 2:return(f=t.sent()).challengeName?[2,f]:[2,i.currentAuthenticatedUser()];case 3:return g=t.sent(),[2,Promise.reject(g)];case 4:return[2]}}))}))},verifyTotpToken:function(r,n){return e(this,void 0,void 0,(function(){var e,n;return t(this,(function(t){return e=r.user,n=r.formValues.confirmation_code,[2,i.verifyTotpToken(e,n)]}))}))},federatedSignIn:function(r,n){return e(this,void 0,void 0,(function(){var e;return t(this,(function(t){switch(t.label){case 0:return e=n.data.provider,[4,i.federatedSignIn({provider:e})];case 1:return[2,t.sent()]}}))}))},checkVerifiedContact:function(r,n){return e(this,void 0,void 0,(function(){var e;return t(this,(function(t){switch(t.label){case 0:return e=r.user,[4,i.verifiedContact(e)];case 1:return[2,t.sent()]}}))}))},verifyUser:function(r,n){return e(this,void 0,void 0,(function(){var e,n;return t(this,(function(t){switch(t.label){case 0:return e=r.formValues.unverifiedAttr,[4,i.verifyCurrentUserAttribute(e)];case 1:return n=t.sent(),r.attributeToVerify=e,[2,n]}}))}))},confirmVerifyUser:function(r,n){return e(this,void 0,void 0,(function(){var e,n;return t(this,(function(t){switch(t.label){case 0:return e=r.attributeToVerify,n=r.formValues.confirmation_code,[4,i.verifyCurrentUserAttributeSubmit(e,n)];case 1:return[2,t.sent()]}}))}))},validateFields:function(r,n){return e(this,void 0,void 0,(function(){return t(this,(function(e){return[2,u(r.formValues,r.touched,r.passwordSettings,[F.validateConfirmPassword])]}))}))}}})}export{k as signInActor};
