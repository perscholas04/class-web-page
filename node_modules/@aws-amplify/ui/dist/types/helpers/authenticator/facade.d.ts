/**
 * This file contains helpers that translates xstate internals to more
 * understandable authenticator contexts. We provide these contexts with
 * `useAuthenticator` hook/composable/service.
 */
/// <reference types="amazon-cognito-identity-js" />
import { Sender } from 'xstate';
import { AuthEvent, AuthEventData, AuthMachineState } from '../../types';
/**
 * Creates public facing auth helpers that abstracts out xstate implementation
 * detail. Each framework implementation can export these helpers so that
 * developers can send events without having to learn internals.
 *
 * ```
 * const [state, send] = useActor(...);
 * const { submit } = getSendEventAliases(send);
 * submit({ username, password})
 * ```
 */
export declare const getSendEventAliases: (send: Sender<AuthEvent>) => {
    readonly resendCode: (data?: AuthEventData) => void;
    readonly signOut: (data?: AuthEventData) => void;
    readonly submitForm: (data?: AuthEventData) => void;
    readonly updateForm: (data?: AuthEventData) => void;
    readonly updateBlur: (data?: AuthEventData) => void;
    readonly toFederatedSignIn: (data?: AuthEventData) => void;
    readonly toResetPassword: (data?: AuthEventData) => void;
    readonly toSignIn: (data?: AuthEventData) => void;
    readonly toSignUp: (data?: AuthEventData) => void;
    readonly skipVerification: (data?: AuthEventData) => void;
};
export declare const getServiceContextFacade: (state: AuthMachineState) => {
    error: string;
    hasValidationErrors: boolean;
    isPending: boolean;
    route: string;
    user: import("../../types").CognitoUserAmplify;
    validationErrors: {
        [x: string]: string | string[];
    };
    codeDeliveryDetails: import("amazon-cognito-identity-js").CodeDeliveryDetails;
};
export declare const getServiceFacade: ({ send, state }: {
    send: any;
    state: any;
}) => {
    error: string;
    hasValidationErrors: boolean;
    isPending: boolean;
    route: string;
    user: import("../../types").CognitoUserAmplify;
    validationErrors: {
        [x: string]: string | string[];
    };
    codeDeliveryDetails: import("amazon-cognito-identity-js").CodeDeliveryDetails;
    resendCode: (data?: AuthEventData) => void;
    signOut: (data?: AuthEventData) => void;
    submitForm: (data?: AuthEventData) => void;
    updateForm: (data?: AuthEventData) => void;
    updateBlur: (data?: AuthEventData) => void;
    toFederatedSignIn: (data?: AuthEventData) => void;
    toResetPassword: (data?: AuthEventData) => void;
    toSignIn: (data?: AuthEventData) => void;
    toSignUp: (data?: AuthEventData) => void;
    skipVerification: (data?: AuthEventData) => void;
};
